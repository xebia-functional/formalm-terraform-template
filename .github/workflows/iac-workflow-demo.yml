name: Run FormaLM analysis on IaC
defaults:
  run:
    shell: bash

on:
  pull_request:
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  check1:
    name: Check on ${{ matrix.os.runner }}
    runs-on: ${{ matrix.os }}
    container: ghcr.io/xebia-functional/formalm:main
    permissions:
      contents: read  #  to fetch code (actions/checkout)
      packages: read  #  to fetch packages (docker)
      discussions: write
      pull-requests: write
    defaults:
      run:
        shell: ${{ matrix.shell }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        include:
          - os: ubuntu-latest
            shell: bash
    steps:
      - uses: actions/checkout@v2

      - name: Restore native cache
        id: cache-native
        uses: actions/cache@v3
        with:
          path: |
            scripts/build
          key: ${{ runner.os }}-native-${{ hashFiles('./scripts/*') }}

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('/*.gradle*', '/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Setup OPENAI token
        run: echo "OPENAI_TOKEN=${{ secrets.OPENAI_TOKEN }} " >> $GITHUB_ENV
      - name: Adding Poetry to path
        run: echo "/root/.local/share/pypoetry/venv/bin" >> $GITHUB_PATH
      - name: Testing
        run: |
          poetry --version
      - name: Run FormaLM analysis
        run: >
          java -jar /home/gradle/formalm/formalm-0.0.1-SNAPSHOT.jar 
          repo-path="$GITHUB_WORKSPACE"
          output-path="/home/gradle"
          services=trivy
#     This step is only needed if you want to see in the logs the SARIF file
      - name: Show SARIF file
        run: cat /home/gradle/report.sarif
#     This step is needed in the case you want to upload the SARIF file to GitHub Code Scanning
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: /home/gradle/report.sarif
#     This step will create a comment in the PR pointing to the GitHub Code Scanning results
      - name: Create comment to GitHub Code Scanning results
        uses: actions/github-script@v6
        env:
          URL: ${{ github.server_url }}/${{ github.repository }}
        with:
          script: |
            const script = require('./.github/workflows/comment-link-security.js');
            script({github, context});
#     In case you want to export all the different artifacts generated by FormaLM, you can use this step
#     to upload them as a GitHub artifact.
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: /home/gradle/reports
          retention-days: 5
      - uses: actions/github-script@v6
#     This action requires the following permissions:
#        discussions: write
#        pull-requests: write
        env:
          DATA: ${{steps.listFiles.outputs.JSON_CONTENT}}
        with:
          script: |
            const script = require('./.github/workflows/reports-to-comments.js')
            script({github, context})
